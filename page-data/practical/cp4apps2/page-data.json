{"componentChunkName":"component---src-pages-practical-cp-4-apps-2-index-mdx","path":"/practical/cp4apps2/","result":{"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{"title":"IBM Cloud Pak for Applications - Microservices"},"relativePagePath":"/practical/cp4apps2/index.mdx","titleType":"page","MdxNode":{"id":"04cdbbbc-9eaa-5c0e-8e14-46311ba0c4c1","children":[],"parent":"1ec1c7c8-abe8-54c1-a886-b762429f4995","internal":{"content":"---\ntitle: IBM Cloud Pak for Applications - Microservices\n---\n\n<PageDescription>\n\nUse IBM Cloud Pak for Applications to integrate microservices.\n\nFor this homework you will use two existing applications and deploy them as a set of microservices using the CP4Apps workflow.\n\n![Frontend Backend Demo](images/cp4apps-front-back.png)\n\n</PageDescription>\n\nThis guide assumes the following:\n\n1. You are using a Developer Tools environment that has already been installed\n1. Cloud Pack for Applications has already been installed in the environment.\n1. You already completed [CP4Apps homeworks](/practical/cp4apps)\n\n\n## Deploy existing Backend as Appsody App\n\n- Create the backend project using the following template https://github.com/kabanero-demo/appsody-backend\n\n- Click on `Use this template` and use your assigned MOOC github organization `https://github.com/mooc-team-{id}/appsody-backend-{initials}` for example: `https://github.com/mooc-team-one/appsody-backend-cs`\n\n- Clone the new Github repo locally\n\n- Initialize existing App with appsody CLI\n    ```bash\n    appsody init kabanero-0.2.1/nodejs-express none\n    ```\n- Run the App with appsody locally and access on http://localhost:3001 (port 3000 will be use later for frontend)\n    ```bash\n    appsody run -p 3001:3000 -p 9230:9229 -p 8081:8080\n    ``` \n- Add deployment manifest\n    ```bash\n    appsody deploy --generate-only\n    ```\n- Add the namespace to deploy the App, edit `app-deploy.yaml`\n    ```yaml\n    metadata:\n      namespace: dev-{initials}\n    ```\n- Commit and push the new appsody related files\n    ```bash\n    git add .\n    git commit -m \"Add appsody files\"\n    git push\n    ``` \n- Create a Webhook on your Github repo to trigger the Tekton Pipeline following the instructions from [Tekton Pipelines Homework](/practical/cp4apps#build-an-app-with-a-tekton-pipeline)\n\n## Deploy existing Frontend as Appsody App\n\n- Create the frontend project using the following template https://github.com/kabanero-demo/appsody-frontend\n\n- Click on `Use this template` and use your assigned MOOC github organization `https://github.com/mooc-team-{id}/appsody-frontend-{initials}` for example: `https://github.com/mooc-team-one/appsody-frontend-cs`\n\n- Clone the new Github repo locally\n\n- Initialize existing App with appsody CLI\n    ```bash\n    appsody init kabanero-0.2.1/nodejs-express none\n    ```\n- Run the App with appsody locally and access on http://localhost:3000 (port 3001 is used by the backend)\n    ```bash\n    appsody run\n    ```\n- Test the app by adding a new user, make sure the backend is running with appsody and exposed on port 3001\n- Add deployment manifest\n    ```bash\n    appsody deploy --generate-only\n    ```\n- Add the namespace to deploy the App, edit `app-deploy.yaml`\n    ```yaml\n    metadata:\n      namespace: dev-{initials}\n    ```\n- Add environment variable to link backend service on port 3000 to frontend service, edit `app-deploy.yaml`\n    ```yaml\n    spec:\n      env:\n        - name: APPSODY_BACKEND_DEFAULT_URL\n          value: http://appsody-backend-{initials}:3000/\n    ```\n- Commit and push the new appsody related files\n    ```bash\n    git add .\n    git commit -m \"Add appsody files\"\n    git push\n    ``` \n- Create a Webhook on your Github repo to trigger the Tekton Pipeline following the instructions from [Tekton Pipelines Homework](/practical/cp4apps#build-an-app-with-a-tekton-pipeline)\n\n## Verify deployed Microservices\n\n- Open your project using the OpenShift Console\n- Verify there are two applications corresponding to the frontend and backend services\n\n![Frontend Backend Console](images/ocp-console-front-back.png)\n\n- Access the route for the frontend service and register a new user\n\n![Frontend Route](images/frontend-running.png)","type":"Mdx","contentDigest":"fb3315019f3fdd352f4cd8316c3e9358","counter":620,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"IBM Cloud Pak for Applications - Microservices"},"exports":{},"rawBody":"---\ntitle: IBM Cloud Pak for Applications - Microservices\n---\n\n<PageDescription>\n\nUse IBM Cloud Pak for Applications to integrate microservices.\n\nFor this homework you will use two existing applications and deploy them as a set of microservices using the CP4Apps workflow.\n\n![Frontend Backend Demo](images/cp4apps-front-back.png)\n\n</PageDescription>\n\nThis guide assumes the following:\n\n1. You are using a Developer Tools environment that has already been installed\n1. Cloud Pack for Applications has already been installed in the environment.\n1. You already completed [CP4Apps homeworks](/practical/cp4apps)\n\n\n## Deploy existing Backend as Appsody App\n\n- Create the backend project using the following template https://github.com/kabanero-demo/appsody-backend\n\n- Click on `Use this template` and use your assigned MOOC github organization `https://github.com/mooc-team-{id}/appsody-backend-{initials}` for example: `https://github.com/mooc-team-one/appsody-backend-cs`\n\n- Clone the new Github repo locally\n\n- Initialize existing App with appsody CLI\n    ```bash\n    appsody init kabanero-0.2.1/nodejs-express none\n    ```\n- Run the App with appsody locally and access on http://localhost:3001 (port 3000 will be use later for frontend)\n    ```bash\n    appsody run -p 3001:3000 -p 9230:9229 -p 8081:8080\n    ``` \n- Add deployment manifest\n    ```bash\n    appsody deploy --generate-only\n    ```\n- Add the namespace to deploy the App, edit `app-deploy.yaml`\n    ```yaml\n    metadata:\n      namespace: dev-{initials}\n    ```\n- Commit and push the new appsody related files\n    ```bash\n    git add .\n    git commit -m \"Add appsody files\"\n    git push\n    ``` \n- Create a Webhook on your Github repo to trigger the Tekton Pipeline following the instructions from [Tekton Pipelines Homework](/practical/cp4apps#build-an-app-with-a-tekton-pipeline)\n\n## Deploy existing Frontend as Appsody App\n\n- Create the frontend project using the following template https://github.com/kabanero-demo/appsody-frontend\n\n- Click on `Use this template` and use your assigned MOOC github organization `https://github.com/mooc-team-{id}/appsody-frontend-{initials}` for example: `https://github.com/mooc-team-one/appsody-frontend-cs`\n\n- Clone the new Github repo locally\n\n- Initialize existing App with appsody CLI\n    ```bash\n    appsody init kabanero-0.2.1/nodejs-express none\n    ```\n- Run the App with appsody locally and access on http://localhost:3000 (port 3001 is used by the backend)\n    ```bash\n    appsody run\n    ```\n- Test the app by adding a new user, make sure the backend is running with appsody and exposed on port 3001\n- Add deployment manifest\n    ```bash\n    appsody deploy --generate-only\n    ```\n- Add the namespace to deploy the App, edit `app-deploy.yaml`\n    ```yaml\n    metadata:\n      namespace: dev-{initials}\n    ```\n- Add environment variable to link backend service on port 3000 to frontend service, edit `app-deploy.yaml`\n    ```yaml\n    spec:\n      env:\n        - name: APPSODY_BACKEND_DEFAULT_URL\n          value: http://appsody-backend-{initials}:3000/\n    ```\n- Commit and push the new appsody related files\n    ```bash\n    git add .\n    git commit -m \"Add appsody files\"\n    git push\n    ``` \n- Create a Webhook on your Github repo to trigger the Tekton Pipeline following the instructions from [Tekton Pipelines Homework](/practical/cp4apps#build-an-app-with-a-tekton-pipeline)\n\n## Verify deployed Microservices\n\n- Open your project using the OpenShift Console\n- Verify there are two applications corresponding to the frontend and backend services\n\n![Frontend Backend Console](images/ocp-console-front-back.png)\n\n- Access the route for the frontend service and register a new user\n\n![Frontend Route](images/frontend-running.png)","fileAbsolutePath":"/Users/mjperrins/projects/cat/guide/src/pages/practical/cp4apps2/index.mdx"}}}}