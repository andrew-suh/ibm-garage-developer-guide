{"version":3,"sources":["webpack:///./src/pages/overview/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","isMDXComponent","PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","href","subDirectory","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-overview-index-mdx-6c293085b56a85ea5c64.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mjperrins/projects/cat/guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"developer-tools\"\n    }}>{`Developer Tools`}</h2>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`The Developer Tools have been designed to help a team configure a set of popular open source tools that can enable\ncloud native development. Typically a squad lead or lead developer install and setup these tools after the\ninitial inception workshop. The objective of this is to reduce the amount of time a team needs to configure and\nprepare their IBM Kubernetes Service, Red Hat OpenShift or Red Hat Code Ready Containers development environments.\nThe key benefit of this is to make the end to end CI/CD development lifecycle for Kubernetes,OpenShift and CodeReady Containers\nconsistent across each platform and make the out of the box developer experience and simple as possible.`}</p>\n    <p>{`The installation is managed with Terraform and it enables it to be modular in configuration\nso tools can be easily disabled or new tools added. This combination of tools are proven in the\nindustry to deliver real value for modern cloud native development.`}</p>\n    <p>{`The Red Hat Innovation Lab has a very similar approach to how they deliver success with OpenShift, view their approach `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/rht-labs/labs-ci-cd\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`After installation your environment will consist of the following development tools which have been installed into your IBM Kubernetes Service,Red Hat OpenShift and Red Hat CodeReady Containers cluster managed cluster.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`IBM Container Service Cluster (3 nodes) for Kubernetes or OpenShift`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Create `}<em parentName=\"p\">{`dev`}</em>{`,`}<em parentName=\"p\">{`test`}</em>{`,`}<em parentName=\"p\">{`staging`}</em>{` and `}<em parentName=\"p\">{`tools`}</em>{` namespaces`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install the following tools:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://jenkins.io/\"\n            }}>{`Jenkins CI`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://argoproj.github.io/argo-cd/\"\n            }}>{`Argo CD`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://www.sonarqube.org/\"\n            }}>{`SonarQube`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://docs.pact.io/\"\n            }}>{`Pack Broker`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://jfrog.com/open-source/\"\n            }}>{`Artifactory`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://www.eclipse.org/che/\"\n            }}>{`Eclipse CHE`}</a></li>\n        </ul>\n      </li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The following IBM Cloud services will be created and bound to you your development cluster:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://cloud.ibm.com/docs/services/appid?topic=appid-service-access-management\"\n            }}>{`AppID Application Authentication`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-getting-started\"\n            }}>{`Cloudant NoSQL Database`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://cloud.ibm.com/docs/services/cloud-object-storage?topic=cloud-object-storage-getting-started\"\n            }}>{`Cloud Object Storage Storage`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://cloud.ibm.com/docs/services/Log-Analysis-with-LogDNA?topic=LogDNA-getting-started\"\n            }}>{`LogDNA Logging`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://cloud.ibm.com/docs/services/Monitoring-with-Sysdig?topic=Sysdig-getting-started\"\n            }}>{`SysDig Monitoring`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://cloud.ibm.com/docs/services/databases-for-postgresql?topic=databases-for-postgresql-about\"\n            }}>{`PostgreSQL`}</a>{` (used by SonarQube)`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <p>{`To continue getting started work through the following links and guides`}</p>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink to=\"getting-started/installation\" mdxType=\"AnchorLink\">Installation</AnchorLink>\n  <AnchorLink to=\"getting-started/deploy-app\" mdxType=\"AnchorLink\">Deploy First App</AnchorLink>\n  <AnchorLink to=\"guides/overview\" mdxType=\"AnchorLink\">Guides</AnchorLink>\n  <AnchorLink to=\"starterkits/overview\" mdxType=\"AnchorLink\">Starter Kit Templates</AnchorLink>\n    </AnchorLinks>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}