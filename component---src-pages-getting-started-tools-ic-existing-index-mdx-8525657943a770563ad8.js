(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{418:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return m}));n(11),n(5),n(6),n(4),n(10),n(1),n(0);var a=n(106),r=n(445);function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var l={},o=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",t)}},s=o("Tabs"),c=o("Tab"),b=o("PageDescription"),p={_frontmatter:l},u=r.a;function m(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(u,i({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(s,{mdxType:"Tabs"},Object(a.b)(c,{label:"Pre-requisites",mdxType:"Tab"},Object(a.b)(b,{mdxType:"PageDescription"},Object(a.b)("p",null,"Prepare to run the scripts that create the environment")),Object(a.b)("p",null,"The IBM Garage for Cloud Developer Tools facilitate development and deployment of cloud-native applications.\nThey can be hosted in any Kubernetes or OpenShift cluster.\nIn IBM Cloud, the cluster is hosted by either the ",Object(a.b)("a",i({parentName:"p"},{href:"https://cloud.ibm.com/docs/containers"}),"IBM Cloud Kubernetes Service")," or\n",Object(a.b)("a",i({parentName:"p"},{href:"https://cloud.ibm.com/docs/openshift"}),"Red Hat OpenShift on IBM Cloud"),". "),Object(a.b)("p",null,"These instructions assume that the cluster has already been created and explain\nhow to access, configure, and run the scripts to install the Developer Tools into that existing cluster. "),Object(a.b)("p",null,"The following pre-requisites are required before following the setup instructions:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An IBM Cloud account with the ability to provision cloud service instances in the same region and zone as the existing cluster"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",i({parentName:"li"},{href:"https://www.docker.com/products/docker-desktop"}),"Docker Desktop")," installed and running on your local machine"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",i({parentName:"li"},{href:"https://nodejs.org/en/"}),"Node")," installed on your local machine"))),Object(a.b)(c,{label:"1. Download",mdxType:"Tab"},Object(a.b)(b,{mdxType:"PageDescription"},Object(a.b)("p",null,"Obtain the scripts that create the environment")),Object(a.b)("p",null,"Clone the ",Object(a.b)("a",i({parentName:"p"},{href:"https://github.com/ibm-garage-cloud/ibm-garage-iteration-zero"}),"ibm-garage-iteration-zero")," Git repository to your local filesystem"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"git clone git@github.com:ibm-garage-cloud/ibm-garage-iteration-zero.git\n")),Object(a.b)("p",null,"Switch to the cloned directory"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"cd ibm-garage-iteration-zero\n"))),Object(a.b)(c,{label:"2. API keys",mdxType:"Tab"},Object(a.b)(b,{mdxType:"PageDescription"},Object(a.b)("p",null,"Configure the keys the CLI uses to authenticate")),Object(a.b)("p",null,"The installation scripts need API keys to authenticate to IBM Cloud.\nThe following steps create the required API keys and put them into a file properties file."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"credentials.properties")," property file looks like this: "),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"classic.username=<CLASSIC_USERNAME>\nclassic.api.key=<CLASSIC_API_KEY>\nibmcloud.api.key=<IBMCLOUD_API_KEY>\n")),Object(a.b)("p",null,"Since the cluster already exists, we’ll only need to set the ",Object(a.b)("inlineCode",{parentName:"p"},"ibmcloud.api.key")," property."),Object(a.b)("h3",{id:"step-a-create-the-credentialsproperties-file"},"Step A. Create the credentials.properties file"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Inside the ",Object(a.b)("inlineCode",{parentName:"li"},"iteration-zero-ibmcloud")," folder, copy ",Object(a.b)("inlineCode",{parentName:"li"},"credentials.template")," to a file named ",Object(a.b)("inlineCode",{parentName:"li"},"credentials.properties"),".")),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"cd iteration-zero-ibmcloud\ncp credentials.template credentials.properties\n")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"credentials.properties")," file is already listed in the ",Object(a.b)("inlineCode",{parentName:"p"},".gitignore")," file so that the file containing\nyour private API keys will not be pushed to the server repository."),Object(a.b)("h3",{id:"step-b-set-the-ibm-cloud-api-key"},"Step B. Set the IBM Cloud API key"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Follow these instructions to create an IBM Cloud API key:"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",i({parentName:"li"},{href:"https://cloud.ibm.com/docs/iam?topic=iam-userapikey",title:"Managing user API keys"}),"Managing user API keys")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Edit the ",Object(a.b)("inlineCode",{parentName:"p"},"credentials.properties")," file to set the value for the ",Object(a.b)("inlineCode",{parentName:"p"},"ibmcloud.api.key")," property.")))),Object(a.b)(c,{label:"3. Configuration",mdxType:"Tab"},Object(a.b)(b,{mdxType:"PageDescription"},Object(a.b)("p",null,"Configure the properties describing the environment")),Object(a.b)("p",null,"The settings for creating the Developer Tools environment go in two properties files\nin the ",Object(a.b)("inlineCode",{parentName:"p"},"./terraform/settings")," directory:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"environment.tfvars")," — Properties for installing the Developer Tools"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"vlan.tfvars")," — Properties for creating the cluster")),Object(a.b)("p",null,"Follow the instructions below to set the existing cluster’s details in the ",Object(a.b)("inlineCode",{parentName:"p"},"environment.tfvars")," file.\nThe ",Object(a.b)("inlineCode",{parentName:"p"},"vlan.tfvars")," file must exist but will be ignored since the cluster already exists."),Object(a.b)("h3",{id:"environment-variables"},"Environment variables"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"environment.tfvars")," properties will be used to install the Development Tools."),Object(a.b)("p",null,"Typical values look like this:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),'resource_group_name="catalyst-team"\ncluster_name="catalyst-team-cluster"\n# The type of cluster that will be created/used (kubernetes or openshift)\ncluster_type="kubernetes"\n# Flag indicating if we are using an existing cluster or creating a new one\ncluster_exists="false"\n# Flag indicating if we are using an existing PostgreSQL server or creating a new one\npostgres_server_exists="false"\n')),Object(a.b)("p",null,"Set them based on the existing cluster:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"resource_group_name")," — The existing cluster’s resoruce group "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"cluster_name")," — The existing cluster’s name"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"cluster_exists")," — Set to ",Object(a.b)("inlineCode",{parentName:"li"},'"true"')," for the existing cluster"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"cluster_type")," — Specify whether the existing cluster is Kubernetes or OpenShift"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"postgres_server_exists")," — Specify whether the existing cluster already has an existing PostgreSQL service instance"))),Object(a.b)(c,{label:"4. Run",mdxType:"Tab"},Object(a.b)(b,{mdxType:"PageDescription"},Object(a.b)("p",null,"Run the scripts that create the environment")),Object(a.b)("p",null,"Having configured the ",Object(a.b)("inlineCode",{parentName:"p"},"credentials.properties"),", ",Object(a.b)("inlineCode",{parentName:"p"},"environment.tfvars"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"vlan.tfvars")," properties files,\nwe are now ready to kick off the installation."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Launch a ",Object(a.b)("a",i({parentName:"p"},{href:"https://github.com/ibm-garage-cloud/ibm-garage-cli-tools",title:"Cloud Garage Tools Docker image"}),"Developer Tools Docker container"),"."),Object(a.b)("p",{parentName:"li"},"  Run the following command to run the Docker container:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"./launch.sh\n")),Object(a.b)("p",{parentName:"li"},"  This will install the Cloud Garage Tools Docker image and exec shell into the running container. The container will\nmount the filesystem’s ",Object(a.b)("inlineCode",{parentName:"p"},"./terraform/")," directory as ",Object(a.b)("inlineCode",{parentName:"p"},"/home/devops/src/"),". Once the Docker container has started and\nthe script has exec shelled into it, you will see an IBM Garage banner. This will help you identify you are running\ninside the Docker image that has just mounted your file system."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"% ./launch.sh\nCleaning up old container: ibm-garage-cli-tools-abcde\nInitializing container ibm-garage-cli-tools-abcde from garagecatalyst/ibm-garage-cli-tools:0.0.24\nd14e378eac5f8080dbaf5466d680396fc36f9fcf9433247409ea9b3a62326ad2\nAttaching to running container...\n    ________  __  ___   ________                __   ______\n   /  _/ __ )/  |/  /  / ____/ /___  __  ______/ /  / ____/___ __________ _____ ____\n   / // __  / /|_/ /  / /   / / __ \\/ / / / __  /  / / __/ __ `/ ___/ __ `/ __ `/ _ \\\n _/ // /_/ / /  / /  / /___/ / /_/ / /_/ / /_/ /  / /_/ / /_/ / /  / /_/ / /_/ /  __/\n/___/_____/_/  /_/   \\____/_/\\____/\\__,_/\\__,_/   \\____/\\__,_/_/   \\__,_/\\__, /\\___/\n                                                                        /____/\nRun 'image-help' to get a list of available tools, scripts, and ENV properties\n")),Object(a.b)("p",{parentName:"li"},"  The ",Object(a.b)("inlineCode",{parentName:"p"},"image-help")," command shows what can be done in this conatiner:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"$ image-help\nAvailable env properties (can be overridden for individual commands):\n> BM_API_KEY - the IBM Cloud api key\n> REGION - the IBM Cloud region (e.g. us-south)\n> RESOURCE_GROUP - the IBM Cloud resource group\n> CLUSTER_NAME - the name of the kubernetes cluster in IBM Cloud\n> SL_USERNAME - the Classic Infrastructure user name or API user name (e.g. 282165_joe@us.ibm.com)\n> SL_API_KEY - the Classic Infrastructure api key\n\nAvailable tools:\n> terraform (with helm, kube, and ibm provider plugins)\n> calicoctl\n> ibmcloud (with container-service, container-registry, and cloud-databases plugins)\n> kubectl\n> kustomize\n> oc\n> helm\n> docker\n> git\n> nvm\n> node (v11.12.0 currently installed)\n> yo\n\nAvailable scripts:\n> init.sh {BM_API_KEY} {REGION} {RESOURCE_GROUP} {CLUSTER_NAME}\n> createNamespaces.sh\n> deleteNamespace.sh\n> installHelm.sh\n> cluster-pull-secret-apply.sh\n> setup-namespace-pull-secrets.sh\n> checkPodRunning.sh\n> copy-secret-to-namespace.sh\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Create the Developer Tools environment"),Object(a.b)("p",{parentName:"li"},"  The supplied Terraform script is ready to run using the settings in the properties files.\nYou optionally can extend or modify the scripts and tailor them for your project’s specific needs."),Object(a.b)("p",{parentName:"li"},"  Run this script in the container:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"./runTerraform.sh\n")),Object(a.b)("p",{parentName:"li"},"  This script will create the Developer Tools environment."),Object(a.b)("p",{parentName:"li"},"  The script will verify some basic settings and prompt if you want to proceed. After you select ",Object(a.b)("strong",{parentName:"p"},"Y")," (for yes),\nthe Terraform Apply process will begin to create the infrastructure and services for your environment."),Object(a.b)("p",{parentName:"li"},"  The existing cluster’s contents will be cleaned up to prepare for the terraform\nprocess. Any resources in the ",Object(a.b)("inlineCode",{parentName:"p"},"tools"),", ",Object(a.b)("inlineCode",{parentName:"p"},"dev"),", ",Object(a.b)("inlineCode",{parentName:"p"},"test"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"staging")," namespaces will be deleted."),Object(a.b)("p",{parentName:"li"},"  The installation process takes about 30 minutes. At the end, you should have your Developer Tools environment\nfully provisioned and configured. Enjoy!"))),Object(a.b)("h3",{id:"developer-tools-environment"},"Developer Tools environment"),Object(a.b)("p",null,"Once the Terraform scripts have finished, you can see the resources that the scripts created."),Object(a.b)("p",null,"To see this in IBM Cloud:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"In the IBM Cloud console, open the ",Object(a.b)("a",i({parentName:"li"},{href:"https://cloud.ibm.com/docs/overview?topic=overview-ui#dashboardview",title:"Managing resources in the resource list"}),"Resource List")),Object(a.b)("li",{parentName:"ul"},"On the Resource List page, filter by your Resource Group (e.g. ",Object(a.b)("inlineCode",{parentName:"li"},"catalyst-team"),")"),Object(a.b)("li",{parentName:"ul"},"You should see these resources listed:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Clusters"),": 1, either Kubernetes or OpenShift"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Services"),": 5 or so, such as PostgreSQL, LogDNA, etc."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Storage"),": 1, an instance of Cloud Object Storage"))),Object(a.b)("li",{parentName:"ul"},"Select the cluster and open the Kubernetes dashboard or OpenShift web console. You should see:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"Namespaces: ",Object(a.b)("inlineCode",{parentName:"li"},"tools"),", ",Object(a.b)("inlineCode",{parentName:"li"},"dev"),", ",Object(a.b)("inlineCode",{parentName:"li"},"test"),", and ",Object(a.b)("inlineCode",{parentName:"li"},"staging")),Object(a.b)("li",{parentName:"ul"},"Deployments in the ",Object(a.b)("inlineCode",{parentName:"li"},"tools")," namespace: ",Object(a.b)("inlineCode",{parentName:"li"},"catalyst-dashboard"),", ",Object(a.b)("inlineCode",{parentName:"li"},"jenkins"),", etc.")))),Object(a.b)("h3",{id:"possible-issues"},"Possible issues"),Object(a.b)("p",null,"If you find that that the Terraform provisioning has failed, try re-running the ",Object(a.b)("inlineCode",{parentName:"p"},"runTerraform.sh")," script again.\nThe state will be saved and Terraform will try and apply the configuration to match the desired end state."),Object(a.b)("p",null,"If you find that some of the services have failed to create in the time allocated, you can try this:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Manually delete the service instances in your resource group"),Object(a.b)("li",{parentName:"ul"},"Delete the ",Object(a.b)("inlineCode",{parentName:"li"},"workspace")," directory (which will remove any state that has been created by Terraform)"),Object(a.b)("li",{parentName:"ul"},"Re-run the ",Object(a.b)("inlineCode",{parentName:"li"},"runTerraform.sh")," script")),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-bash"}),"rm -rf workspace\n./runTerraform.sh\n")))))}m.isMDXComponent=!0},443:function(e){e.exports=JSON.parse('{"data":{"site":{"pathPrefix":"/ibm-garage-developer-guide"}}}')},444:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"repository":{"baseUrl":"","subDirectory":"","branch":"master"}}}}}')},445:function(e,t,n){"use strict";n(32),n(28);var a=n(1),r=n(443),i=n(0),l=n.n(i),o=n(105),s=n.n(o),c=n(195),b=n(127),p=n(3),u=n.n(p),m=n(384),d=function(e){var t,n=e.title,r=e.tabs,i=void 0===r?[]:r;return Object(a.b)("div",{className:u()(m.pageHeader,(t={},t[m.withTabs]=i.length,t))},Object(a.b)("div",{className:"bx--grid"},Object(a.b)("div",{className:"bx--row"},Object(a.b)("div",{className:"bx--col-lg-12"},Object(a.b)("h1",{id:"page-title",className:m.text},n)))))},h=n(444),O=n(385),j=function(e){var t=e.relativePagePath,n=e.repository,r=h.data.site.siteMetadata.repository,i=n||r,l=i.baseUrl,o=i.subDirectory,s=l+"/edit/"+i.branch+o+"/src/pages"+t;return l?Object(a.b)("div",{className:"bx--row "+O.row},Object(a.b)("div",{className:"bx--col"},Object(a.b)("a",{className:O.link,href:s},"Edit this page on GitHub"))):null},g=n(193),_=(n(59),n(26)),f=n(386);var N=function(e){var t,n;function r(){return e.apply(this,arguments)||this}return n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,r.prototype.render=function(){var e=this.props,t=e.tabs,n=e.slug,r=n.split("/").filter(Boolean).slice(-1)[0],i=t.map((function(e){var t,i=s()(e,{lower:!0}),l=i===r,o=new RegExp(r+"(?!-)"),c=n.replace(o,i);return Object(a.b)("li",{key:e,className:u()((t={},t[f.selectedItem]=l,t),f.listItem)},Object(a.b)(_.Link,{className:f.link,to:""+c},e))}));return Object(a.b)("div",{className:f.tabsContainer},Object(a.b)("div",{className:"bx--grid"},Object(a.b)("div",{className:"bx--row"},Object(a.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(a.b)("nav",null,Object(a.b)("ul",{className:f.list},i))))))},r}(l.a.Component),y=n(194);t.a=function(e){var t=e.pageContext,n=e.children,i=e.location,l=e.Title,o=t.frontmatter,p=void 0===o?{}:o,u=t.relativePagePath,m=t.titleType,h=p.tabs,O=p.title,_=p.theme,f=p.description,v=p.keywords,C=r.data.site.pathPrefix,T=C?i.pathname.replace(C,""):i.pathname,w=h?T.split("/").slice(-1)[0]||s()(h[0],{lower:!0}):"";return Object(a.b)(b.a,{homepage:!1,theme:_,pageTitle:O,pageDescription:f,pageKeywords:v,titleType:m},Object(a.b)(d,{title:l?Object(a.b)(l,null):O,label:"label",tabs:h}),h&&Object(a.b)(N,{slug:T,tabs:h,currentTab:w}),Object(a.b)(y.a,{padded:!0},n,Object(a.b)(j,{relativePagePath:u})),Object(a.b)(g.a,{pageContext:t,location:i,slug:T,tabs:h,currentTab:w}),Object(a.b)(c.a,null))}}}]);
//# sourceMappingURL=component---src-pages-getting-started-tools-ic-existing-index-mdx-8525657943a770563ad8.js.map